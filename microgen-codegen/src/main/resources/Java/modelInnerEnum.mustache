    /**
     * {{^description}}Gets {{{name}}}{{/description}}{{#description}}{{description}}{{/description}}
     */
    @javax.json.bind.annotation.JsonbTypeSerializer({{classname}}.{{datatypeWithEnum}}Serializer.class)
    @javax.json.bind.annotation.JsonbTypeDeserializer({{classname}}.{{datatypeWithEnum}}Deserializer.class)
    public static enum {{#datatypeWithEnum}}{{{.}}}{{/datatypeWithEnum}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}} {
    {{#allowableValues}}{{#enumVars}}
        {{{name}}}({{{value}}}){{^-last}},
    {{/-last}}{{#-last}};{{/-last}}
    {{/enumVars}}{{/allowableValues}}

        private final {{{datatype}}} value;

        {{#datatypeWithEnum}}{{{.}}}{{/datatypeWithEnum}}{{^datatypeWithEnum}}{{classname}}{{/datatypeWithEnum}}(final {{{dataType}}} value) {
            this.value = value;
        }

        public {{{datatype}}} getValue() {
            return this.value;
        }

        @Override
        public String toString() {
            return String.valueOf(this.value);
        }

        @javax.json.bind.annotation.JsonbCreator
        public static {{#datatypeWithEnum}}{{{.}}}{{/datatypeWithEnum}}{{^datatypeWithEnum}}{{{classname}}}{{/datatypeWithEnum}} fromValue(final {{{dataType}}} value) {
            return java.util.Arrays.stream({{#datatypeWithEnum}}{{{.}}}{{/datatypeWithEnum}}{{^datatypeWithEnum}}{{{classname}}}{{/datatypeWithEnum}}.values())
                          .filter(b -> b.getValue().equals(value))
                          .findFirst()
                          .orElse(null);
            }
    }

    public static class {{datatypeWithEnum}}Serializer implements javax.json.bind.serializer.JsonbSerializer<{{datatypeWithEnum}}> {

        public {{datatypeWithEnum}}Serializer() { }

        @Override
        public void serialize(
            {{datatypeWithEnum}} aEnum,
            javax.json.stream.JsonGenerator jsonGenerator,
            javax.json.bind.serializer.SerializationContext serializationContext) {
                jsonGenerator.write(aEnum.value);
        }
    }

    public static class {{datatypeWithEnum}}Deserializer implements javax.json.bind.serializer.JsonbDeserializer<{{datatypeWithEnum}}> {
    
        public {{datatypeWithEnum}}Deserializer(){}

        @Override
        public {{datatypeWithEnum}} deserialize(
            javax.json.stream.JsonParser jsonParser,
            javax.json.bind.serializer.DeserializationContext deserializationContext,
            java.lang.reflect.Type type) {
            return {{datatypeWithEnum}}.fromValue(jsonParser.getString());
        }
    }
