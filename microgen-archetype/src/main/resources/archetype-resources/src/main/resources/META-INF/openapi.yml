openapi: 3.0.0
servers:
  - url: "https://localhost:9443"
  - url: "http://localhost:9080"
info:
  title: Todo API
  description: Todo API
  version: 1.0.0
tags:
  - name: createTodo
  - name: listTodos
  - name: updateTodo
  - name: deleteTodo
paths:
  "/todos":
    get:
      tags:
        - listTodos
      operationId: listTodos
      parameters:
        - $ref: "#/components/parameters/StatusQueryParam"
      responses:
        "200":
          description: successful operation
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Todo"
    post:
      tags:
        - createTodo
      operationId: createTodo
      responses:
        "200":
          description: successful operation
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Todo"
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/CreateTodoRequestBody"
  "/todos/{todoId}":
    put:
      tags:
        - updateTodo
      operationId: updateTodo
      parameters:
        - $ref: "#/components/parameters/TodoIdQueryParam"
      responses:
        "200":
          description: successful operation
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Todo"
      requestBody:
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/UpdateTodoRequestBody"
    delete:
      tags:
        - deleteTodo
      operationId: deleteTodo
      parameters:
        - $ref: "#/components/parameters/TodoIdQueryParam"
      responses:
        "204":
          description: No content.
components:
  parameters:
    StatusQueryParam:
      name: status
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/TodoStatus"
    TodoIdQueryParam:
      name: todoId
      in: path
      required: true
      schema:
        type: integer
        format: int64
  schemas:
    GeneralError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        description:
          type: string
    Todo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        create_date:
          type: string
          format: date-time
        done_date:
          type: string
          format: date-time
        status:
          $ref: "#/components/schemas/TodoStatus"
      required:
        - id
        - title
        - status
        - create_date
    TodoStatus:
      type: string
      enum:
        - done
        - waiting
        - working
    CreateTodoRequestBody:
      type: object
      properties:
        title:
          type: string
      required:
        - title
    UpdateTodoRequestBody:
      type: object
      properties:
        title:
          type: string
        status:
          $ref: "#/components/schemas/TodoStatus"